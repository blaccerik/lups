version: '3.8'

services:
  flask:
    build:
      context: flaskr/.
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRE_USER=erik
      - POSTGRE_PASSWORD=erik
      - POSTGRE_BROKER_URL=postgres:5432
      - POSTGRE_DATABASE=erik_db
      - PROD=True
    networks:
      - lups
    ports:
      - 5000:5000
    depends_on:
      - redis
      - postgres
    volumes:
      - image_data:/usr/src/app/images

  worker:
    build:
      context: ./
      dockerfile: celeryr/dockerfile
    command: celery --app worker.tasks.celery worker --concurrency=1
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRE_USER=erik
      - POSTGRE_PASSWORD=erik
      - POSTGRE_BROKER_URL=postgres:5432
      - POSTGRE_DATABASE=erik_db
    depends_on:
      - redis
      - postgres
    networks:
      - lups
    deploy:
      resources:
        limits:
          cpus: '1'  # Adjust the CPU limit as needed
          memory: 2G  # Adjust the memory limit as needed

  dashboard:
    build:
      context: ./
      dockerfile: celeryr/dockerfile
    command: celery --app worker.tasks.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRE_USER=erik
      - POSTGRE_PASSWORD=erik
      - POSTGRE_BROKER_URL=postgres:5432
      - POSTGRE_DATABASE=erik_db
    depends_on:
      - redis
      - worker
    networks:
      - lups

  redis:
    image: redis:6-alpine
    expose:
      - 6379
    networks:
      - lups
    volumes:
      - redis_data:/data

  postgres:
      container_name: erik_db
      image: postgres:alpine
      restart: unless-stopped
      expose:
        - 5432
      environment:
        POSTGRES_DB: erik_db
        POSTGRES_USER: erik
        POSTGRES_PASSWORD: erik
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - lups

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "erik@erik.com"
      PGADMIN_DEFAULT_PASSWORD: "erik"
      PGADMIN_DEFAULT_USER: "erik"
    networks:
      - lups

networks:
  lups:
    driver: bridge

volumes:
  postgres_data:
  image_data:
  redis_data:
