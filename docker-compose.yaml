#version: '3'
#
#services:
#  webserver:
#    image: nginx:latest
#    ports:
#      - 80:80
#      - 443:443
#    restart: always
#    volumes:
#      - ./nginx/conf/:/etc/nginx/conf.d/:ro
#      - ./certbot/www:/var/www/certbot/:ro
#      - ./certbot/conf/:/etc/nginx/ssl/:ro
#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw

version: '3.8'

services:
  # docker compose run -p 80:80 --rm  certbot certonly -d lyps.ee
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - cert_data:/etc/letsencrypt
  dummy:
    image: ubuntu
    command: [ "bash" ]
    stdin_open: true
    tty: true
    volumes:
      - cert_data:/etc/letsencrypt
  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: lups/.
      dockerfile: Dockerfile
    networks:
      - lups
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - cert_data:/etc/letsencrypt
#  fastapi:
#    container_name: fastapi
#    restart: unless-stopped
#    build:
#      context: fast
#    ports:
#      - "8000:8000"
#    networks:
#      - lups
#    environment:
#      - REDIS_BROKER_URL=redis
#      - POSTGRES_USER=erik
#      - POSTGRES_PASSWORD=erik
#      - POSTGRES_BROKER_URL=postgres:5432
#      - POSTGRES_DATABASE=postgres
#    volumes:
#      - image_data:/usr/src/app/images
#
##  worker:
##    container_name: worker
##    build:
##      context: celeryr
##    command: celery --app worker.tasks worker --concurrency=1 --pool prefork
##    environment:
##      - REDIS_BROKER_URL=redis
##      - POSTGRES_USER=erik
##      - POSTGRES_PASSWORD=erik
##      - POSTGRES_BROKER_URL=postgres:5432
##      - POSTGRES_DATABASE=postgres
##    depends_on:
##      - redis
##      - postgres
##    networks:
##      - lups
##    deploy:
##      resources:
##        limits:
##          cpus: '2'  # Adjust the CPU limit as needed
##          memory: 4G  # Adjust the memory limit as needed
##    volumes:
##      - image_data:/usr/src/app/images
##
##  beat:
##    container_name: beat
##    build:
##      context: celeryr
##    command: celery --app beat beat
##    environment:
##      - REDIS_BROKER_URL=redis://redis:6379/0
##    depends_on:
##      - redis
##      - worker
##    networks:
##      - lups
#
#  redis:
#    container_name: redis
#    image: redis:6-alpine
#    restart: unless-stopped
#    expose:
#      - 6379
#    networks:
#      - lups
#    volumes:
#      - redis_data:/data
#
#  postgres:
#      container_name: postgres
#      image: postgres:alpine
#      restart: unless-stopped
#      expose:
#        - 5432
#      environment:
#        POSTGRES_DB: postgres
#        POSTGRES_USER: erik
#        POSTGRES_PASSWORD: erik
#      volumes:
#        - postgres_data:/var/lib/postgresql/data
#      networks:
#        - lups

networks:
  lups:
    driver: bridge

volumes:
  cert_data:
  postgres_data:
  image_data:
  redis_data:
